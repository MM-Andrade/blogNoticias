trigger:
- main
- fetat-test-pipe

resources:
- repo: self

variables:
  unitTeste: '$(System.DefaultWorkingDirectory)/BlogPetNews.Unit.Tests/BlogPetNews.Unit.Tests.csproj'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: 'Test Stage'
  jobs:
  - job: UnitTests
    displayName: 'Run Unit Tests'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: dotnet test $(unitTeste) --configuration Release
      displayName: 'Run Unit Tests'
  - job: IntegrationTests
    displayName: 'Run Integration Tests'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: dotnet test $(System.DefaultWorkingDirectory)/BlogPetNews.Integration.Tests.csproj --configuration Release
      displayName: 'Run Integration Tests'

- stage: BuildAndPush
  displayName: 'Build and Push Stage'
  jobs:
  - job: BuildContainer
    displayName: 'Build and Push Container ACR'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: '$(AZURE_SUBSCRIPTION)'
        azureContainerRegistry: '$(AZURE_CONTAINER_REGISTRY)'
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/docker-compose.yml'
        action: 'Build services'
        includeSourceTags: true
        includeLatestTag: true
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: '$(AZURE_SUBSCRIPTION)'
        azureContainerRegistry: '$(AZURE_CONTAINER_REGISTRY)'
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/docker-compose.yml'
        action: 'Push services'
        includeSourceTags: true
        includeLatestTag: true
